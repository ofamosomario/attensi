swagger: '2.0'
info:
  title: API V1
  version: v1
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /users:
    post:
      summary: Create an user
      tags:
        - users
      consumes:
        - application/json
        - application/xml
      parameters:
        - name: user
          in: body
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
              password_confirmation:
                type: string
            required:
              - first_name
              - last_name
              - email
              - password
              - password_confirmation
      responses:
        '200':
          description: user created
  /api/v1/auth:
    post:
      summary: User SignIn
      tags:
        - users
      consumes:
        - application/json
        - application/xml
      parameters:
        - name: user
          in: body
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - email
              - password
      responses:
        '200':
          description: token is returned.
  /api/v1/users/scores:
    get:
      parameters:
        - name: Authorization
          description: authorization token header
          required: true
          type: string
          in: header
      summary: Show list of score without ordering'
      tags:
        - scores
      consumes:
        - application/json
        - application/xml
      responses:
        '200':
          description: ok
    post:
      summary: Create an score
      tags:
        - scores
      consumes:
        - application/json
        - application/xml
      parameters:
        - name: Authorization
          description: authorization token header
          required: true
          type: string
          in: header
        - name: score
          in: body
          schema:
            type: object
            properties:
              user_id:
                type: integer
              started_playing:
                type: string
              score_value:
                type: integer
              time_spent:
                type: string
            required:
              - user_id
              - started_playing
              - score_value
              - time_spent
        - name: Authorization
          description: authorization token header
          required: true
          type: string
          in: header
      responses:
        '200':
          description: score created
    put:
      summary: Update an score
      tags:
        - scores
      consumes:
        - application/json
        - application/xml
      parameters:
        - name: Authorization
          description: authorization token header
          required: true
          type: string
          in: header
        - name: score
          in: body
          schema:
            type: object
            properties:
              user_id:
                type: integer
              started_playing:
                type: string
              score_value:
                type: integer
              time_spent:
                type: string
            required:
              - user_id
              - started_playing
              - score_value
              - time_spent
      responses:
        '200':
          description: score updated
  /api/v1/users/scores/{id}:
    get:
      summary: Show a single score'
      tags:
        - scores
      consumes:
        - application/json
        - application/xml
      parameters:
        - name: Authorization
          description: authorization token header
          required: true
          type: string
          in: header
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
    delete:
      summary: Delete an score
      tags:
        - scores
      consumes:
        - application/json
        - application/xml
      parameters:
        - name: Authorization
          description: authorization token header
          required: true
          type: string
          in: header
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: score deleted
  /api/v1/users/top/{week_number}:
    get:
      summary: Show a rank with users by week number ordened
      tags:
        - users rank
      consumes:
        - application/json
        - application/xml
      parameters:
        - name: Authorization
          description: authorization token header
          required: true
          type: string
          in: header
        - name: week_number
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
  /api/v1/users/bestRated:
    get:
      summary: Show a rank with best and worst user rated
      tags:
        - users rank
      consumes:
        - application/json
        - application/xml
      parameters:
        - name: Authorization
          description: authorization token header
          required: true
          type: string
          in: header
      responses:
        '200':
          description: OK